spring.application.name=NAAS-LENDING
server.port = 8082

# Adresse des Nameservers
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

# Hystrix-Support f\u00fcr mit Feign erzeugte REST-Clients aktivieren
feign.hystrix.enabled=true

# Adresse des Admin-Servers
# Vgl. https://codecentric.github.io/spring-boot-admin/current/#spring-boot-admin-client
spring.boot.admin.client.url=http://localhost:8888
#spring.boot.admin.client.username
#spring.boot.admin.client.password

# Wirklich alle Monitoringendpunkte aktivieren
management.endpoints.web.exposure.include=*

# Log-Eintr\u00e4ge auf Platte sichern, damit diese \u00fcber die Monitoring Webservices
# abgerufen werden k\u00f6nnen und in der Admin-Oberfl\u00e4che sichtbar sind
logging.file=${user.home}/naas-lending.log

# H2 Datenbank
#spring.datasource.url=jdbc:h2:mem:testdb          # In Memory, volatil
#spring.datasource.url=jdbc:h2:file:/tmp/demo      # Persistent im angegebenen Verzeichnis
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Aktivieren der H2 Datenbankkonsole: http://localhost:9090/h2-console/
spring.h2.console.enabled=true
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

# GZIP-Komprimierung beim Aufruf externer Webservices zulassen
feign.compression.request.enabled=true
feign.compression.response.enabled=true

# SQL-Befehle im Protokoll ausgeben
# Vgl. https://www.baeldung.com/sql-logging-spring-boot
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

# X-Forwarded HTTP-Header auswerten, damit die HATEOAS-URLs auch dann noch
# stimmen, wenn der Service \u00fcber das API-Gateway aufgerufen wird.
server.use-forward-headers=true