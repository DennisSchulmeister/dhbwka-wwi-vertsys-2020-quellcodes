spring.application.name = GCPLUS-GOLFCOURSE
server.port = 8091

# AUFGABE: Adresse des Nameservers erg\u00e4nzen
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

# AUFGABE: Adresse des Admin-Servers erg\u00e4nzen
spring.boot.admin.client.url = http://localhost:8888
management.endpoints.web.exposure.include = *

# Log-Eintr\u00e4ge auf Platte sichern, damit diese \u00fcber die Monitoring Webservices
# abgerufen werden k\u00f6nnen und in der Admin-Oberfl\u00e4che sichtbar sind
logging.file.name = ${user.home}/gcplus-golfcourse.log

# Basis-URL der mit Spring DATA REST erzeugten Webservices
spring.data.rest.basePath=/api

# H2 Datenbank
# Standard: In Memory, volatil
#spring.datasource.url=jdbc:h2:mem:testdb    
# Alternativ: Persistent im angegebenen Verzeichnis      
#spring.datasource.url=jdbc:h2:file:/tmp/demo

#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Aktivieren der H2 Datenbankkonsole: http://localhost:9090/h2-console/
spring.h2.console.enabled=true
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

# GZIP-Komprimierung beim Aufruf externer Webservices zulassen
feign.compression.request.enabled = true
feign.compression.response.enabled = true

# SQL-Befehle im Protokoll ausgeben
# Vgl. https://www.baeldung.com/sql-logging-spring-boot
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder = TRACE
#logging.level.org.springframework.jdbc.core.JdbcTemplate = DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils = TRACE

# X-Forwarded HTTP-Header auswerten, damit die HATEOAS-URLs auch dann noch
# stimmen, wenn der Service \u00fcber das API-Gateway aufgerufen wird.
server.use-forward-headers = true
